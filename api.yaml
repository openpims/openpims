openapi: 3.1.0
info:
  title: OpenPIMS Cookie Consent API
  version: 2.0.0
  description: |
    **Reference documentation** for the OpenPIMS Cookie Consent API.

    This schema documents the API response format returned by `ApiController::index()`.
    No automatic validation is performed - this serves as documentation only.

    **3-Tier Consent Resolution:**
    OpenPIMS resolves cookie consent using a 3-tier priority system:

    1. **Cookie-Level** (Tier 3 - Highest Priority)
       - Individual cookie consent overrides all other tiers
       - Example: User explicitly allows "_ga" but rejects category "analytics"

    2. **Provider-Level** (Tier 2 - Medium Priority)
       - Provider-specific consent applies to all cookies from that provider
       - Example: User allows "Matomo" but rejects "Google Analytics" (both analytics)

    3. **Category-Level** (Tier 1 - Lowest Priority)
       - Category-wide consent applies to all cookies in that category
       - Example: User rejects all "marketing" cookies

    4. **Default** (No explicit consent)
       - Functional/necessary cookies: allowed (TDDDG ยง25 Abs. 2)
       - All other cookies: rejected

    **Priority Formula:**
    ```
    if (cookie_consent exists)
        return cookie_consent
    else if (provider_consent exists && cookie.provider matches)
        return provider_consent
    else if (category_consent exists)
        return category_consent
    else if (cookie.necessary == true)
        return 1 (allow)
    else
        return 0 (reject)
    ```

servers:
  - url: https://{token}.{domain}
    description: Token-based subdomain for user-specific consent queries
    variables:
      token:
        default: "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6"
        description: 32-character deterministic token (HMAC-SHA256)
      domain:
        default: "openpims.de"
        description: OpenPIMS provider domain

paths:
  /:
    get:
      summary: Query user cookie consents for a website
      description: |
        Returns user consent preferences for all cookies defined in the website's
        cookie definition file. Uses 3-tier consent resolution (Cookie > Provider > Category > Default).

        **Authentication:**
        User identification via deterministic token in subdomain.
        Token = substr(hmac_sha256(userId + domain + dayTimestamp, userSecret), 0, 32)

        **Token Rotation:**
        Tokens are valid for current day + previous day (24h grace period).
      operationId: getCookieConsents
      parameters:
        - name: url
          in: query
          required: true
          description: URL of the website's cookie definition file (openpims.json)
          schema:
            type: string
            format: uri
            example: "https://example.com/openpims.json"
      responses:
        '200':
          description: Successful response with resolved cookie consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentList'
              examples:
                allAllowed:
                  summary: User accepted all cookies
                  value:
                    - cookie: "session_id"
                      allowed: true
                    - cookie: "_ga"
                      allowed: true
                    - cookie: "_fbp"
                      allowed: true
                mixedConsents:
                  summary: Mixed consents (some allowed, some rejected)
                  value:
                    - cookie: "session_id"
                      allowed: true
                    - cookie: "_ga"
                      allowed: false
                    - cookie: "_gid"
                      allowed: false
                    - cookie: "_fbp"
                      allowed: false
                emptyConsents:
                  summary: No consents stored (defaults applied)
                  value:
                    - cookie: "session_id"
                      allowed: true
                    - cookie: "_ga"
                      allowed: false
                    - cookie: "_fbp"
                      allowed: false

components:
  schemas:
    ConsentList:
      type: array
      description: |
        Array of cookie consent objects with resolved consent status.
        Each cookie's allowed status is determined by 3-tier priority system.
      items:
        $ref: '#/components/schemas/ConsentItem'
      minItems: 0
      example:
        - cookie: "session_id"
          allowed: true
        - cookie: "_ga"
          allowed: false
        - cookie: "_fbp"
          allowed: false

    ConsentItem:
      type: object
      description: |
        Individual cookie with resolved consent status.

        **allowed values:**
        - true = Cookie allowed (user consent or necessary cookie)
        - false = Cookie rejected (no consent or explicit rejection)
      additionalProperties: false
      required:
        - cookie
        - allowed
      properties:
        cookie:
          type: string
          description: Cookie name or comma-separated list of cookie names
          minLength: 1
          examples:
            - "session_id"
            - "_ga"
            - "DSID, IDE, HSID"
        allowed:
          type: boolean
          description: |
            Cookie consent status after 3-tier resolution:
            - true = allowed (Cookie > Provider > Category consent, or necessary cookie)
            - false = rejected (no consent, or explicit rejection)
          default: false
          examples:
            - true
            - false

  securitySchemes:
    DeterministicToken:
      type: apiKey
      in: path
      name: token
      description: |
        32-character deterministic token for user identification.

        **Generation:**
        ```
        token = substr(
          hmac_sha256(
            userId + requestingDomain + dayTimestamp,
            userSecret
          ),
          0,
          32
        )
        ```

        **Validity:**
        - Current day: valid
        - Previous day: valid (24h grace period)
        - Older tokens: invalid

        **Security:**
        - Unique per user, domain, and day
        - Cannot be guessed or reused across domains
        - Automatic rotation every 24 hours

security:
  - DeterministicToken: []
